{"version":3,"sources":["components/Pagination.jsx","components/SearchInput.jsx","components/FilterButton.jsx","components/Search.jsx","helpers/formatters.js","components/Table.js","utils/paginate.js","App.js","serviceWorker.js","index.js"],"names":["Pagination","props","itemsCount","pageSize","onPageChange","currentPage","pagesCount","Math","ceil","pages","_","range","react_default","a","createElement","className","aria-label","map","page","key","onClick","SearchInput","_ref","searchTerm","Fragment","type","placeholder","filters","FilterButton","id","data-toggle","aria-haspopup","aria-expanded","aria-labelledby","f","Search","searchTransactions","allTransactions","components_SearchInput","components_FilterButton","filter","currencyFormatter","number","concat","toFixed","Table","state","transactions","_this","handleCheck","t","Object","toConsumableArray","transaction","billable","setState","handleSearchTransactions","e","console","log","target","value","handlePageChange","_this2","this","_this$state","transactionRows","items","pageNumber","startIndex","slice","take","paginate","status","category","categories","find","merchant","merchants","style","display","justifyContent","alignItems","textAlign","date","parsedDate","Date","month","getMonth","day","getDate","getFullYear","dateFormatter","charAt","merchantFormatter","name","teammember","teamSplit","split","length","includes","teamMemberFormatter","team_member","budget","receipt","cursor","onChange","checked","gst","amount","components_Search","components_Pagination","React","Component","App","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.3b8d8a38.chunk.js","sourcesContent":["import React from \"react\";\nimport _ from \"lodash\";\nimport PropTypes from \"prop-types\";\nconst Pagination = props => {\n  const { itemsCount, pageSize, onPageChange, currentPage } = props;\n\n  const pagesCount = itemsCount / pageSize;\n  if (Math.ceil(pagesCount) === 1) return null;\n  const pages = _.range(1, pagesCount + 1);\n  return (\n    <div className=\"pagination-container\">\n      <nav aria-label=\"Divipay Table Pagination\">\n        <ul className=\"pagination\">\n          {pages.map(page => (\n            <li\n              key={page}\n              className={\n                page === currentPage ? \"page-item active\" : \"page-item\"\n              }\n            >\n              <button onClick={() => onPageChange(page)} className=\"page-link \">\n                {page}\n              </button>\n            </li>\n          ))}\n        </ul>\n      </nav>\n    </div>\n  );\n};\n\nPagination.propTypes = {\n  itemsCount: PropTypes.number.isRequired,\n  pageSize: PropTypes.number.isRequired,\n  onPageChange: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\n\nexport default Pagination;\n","import React from \"react\";\n\nconst SearchInput = ({ searchTerm }) => {\n  return (\n    <>\n      <span className=\"fas fa-search form-control-feedback\" />\n      <input type=\"text\" className=\"form-control\" placeholder=\"Search\" />\n    </>\n  );\n};\n\nexport default SearchInput;\n","import React from \"react\";\n\nconst filters = [\n  \"Merchant\",\n  \"Team member\",\n  \"Category\",\n  \"Budget\",\n  \"GST\",\n  \"Amount\"\n];\n\nconst FilterButton = () => {\n  return (\n    <div className=\"dropdown\">\n      <button\n        className=\"filterButton dropdown-toggle\"\n        type=\"button\"\n        id=\"dropdownMenuButton\"\n        data-toggle=\"dropdown\"\n        aria-haspopup=\"true\"\n        aria-expanded=\"false\"\n      >\n        Filter\n      </button>\n      <div className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton\">\n        <ul>\n          {filters.map(f => (\n            <li key={f} className=\"dropdown-item\">\n              {f}\n            </li>\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default FilterButton;\n","import React from \"react\";\nimport SearchInput from \"./SearchInput\";\nimport FilterButton from \"./FilterButton\";\nimport \"../styles/input.css\";\n\nconst filters = [\n  \"Merchant\",\n  \"Team member\",\n  \"Category\",\n  \"Budget\",\n  \"GST\",\n  \"Amount\"\n];\nconst Search = ({ searchTerm, searchTransactions, allTransactions }) => {\n  return (\n    <div className=\"search-container\">\n      <div className=\"form-group has-search searchgroup\">\n        <SearchInput\n          searchTerm={searchTerm}\n          searchTransactions={searchTransactions}\n        />\n        <FilterButton filter={filters} />\n      </div>\n    </div>\n  );\n};\n\nexport default Search;\n","import React from \"react\";\nexport const currencyFormatter = number => {\n  return `$ ${number.toFixed(2)}`;\n};\n\nexport const dateFormatter = date => {\n  let parsedDate = new Date(date);\n  let month =\n    parsedDate.getMonth() < 10\n      ? `0${parsedDate.getMonth() + 1}`\n      : parsedDate.getMonth();\n  let day =\n    parsedDate.getDate() < 10\n      ? `0${parsedDate.getDate()}`\n      : parsedDate.getDate();\n  return `${day}.${month}.${parsedDate.getFullYear()}`;\n};\n\nexport const iconStatusFormatter = status => {\n  if (status === \"exported\") {\n    return <i className=\"fas fa-arrow-circle-right\"> </i>;\n  } else if (status === \"complete\") {\n    return <i className=\"fas fa-check-circle\"> </i>;\n  } else {\n    return <i className=\"fas fa-exclamation-circle\"> </i>;\n  }\n};\n\nexport const merchantFormatter = merchant => {\n  return <span className=\"merchant\"> {merchant.charAt(0)} </span>;\n};\n\nexport const teamMemberFormatter = teammember => {\n  let teamSplit = teammember.split(\" \");\n\n  if (teamSplit.length === 3 && teamSplit.includes(\"PhD\")) {\n    return (\n      <span className=\"teammember\">\n        {teamSplit[0].charAt(0) + teamSplit[1].charAt(0)}\n      </span>\n    );\n  } else if (teamSplit.length === 3) {\n    return (\n      <span className=\"teammember\">\n        {teamSplit[1].charAt(0) + teamSplit[2].charAt(0)}\n      </span>\n    );\n  } else {\n    return (\n      <span className=\"teammember\">\n        {teamSplit[0].charAt(0) + teamSplit[1].charAt(0)}\n      </span>\n    );\n  }\n};\n\nexport const centredTD = () => {\n  return {\n    display: \"inlineFlex\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\"\n  };\n};\n","import React from \"react\";\nimport \"../styles/Table.css\";\nimport Pagination from \"./Pagination\";\nimport Search from \"./Search\";\nimport { paginate } from \"../utils/paginate\";\nimport {\n  currencyFormatter,\n  dateFormatter,\n  iconStatusFormatter,\n  merchantFormatter,\n  teamMemberFormatter,\n  centredTD\n} from \"../helpers/formatters\";\n\nclass Table extends React.Component {\n  state = {\n    transactions: this.props.transactions,\n    pageSize: 20,\n    currentPage: 1,\n    searchTerm: \" \"\n  };\n\n  handleCheck = t => {\n    const transactions = [...this.state.transactions];\n    transactions.map(function(transaction) {\n      return transaction.id === t.id\n        ? (transaction.billable = !transaction.billable)\n        : null;\n    });\n    this.setState({\n      transactions\n    });\n  };\n\n  handleSearchTransactions = e => {\n    console.log(e.target.value);\n  };\n\n  handlePageChange = page => {\n    this.setState({\n      currentPage: page\n    });\n  };\n  render() {\n    const {\n      currentPage,\n      searchTerm,\n      pageSize,\n      transactions: allTransactions\n    } = this.state;\n    const transactionsCount = paginate(allTransactions, currentPage, pageSize);\n    const transactionRows = transactionsCount.map(transaction => {\n      const category = this.props.categories.find(\n        category => category.id === transaction.category\n      );\n      const merchant = this.props.merchants.find(\n        merchant => merchant.id === transaction.merchant\n      );\n      return (\n        <tr key={transaction.id}>\n          <td style={centredTD()}>\n            <input type=\"checkbox\" className=\"columnBox\" />\n          </td>\n          <td className=\"status\" style={centredTD()}>\n            {iconStatusFormatter(transaction.status)}\n          </td>\n          <td>{dateFormatter(transaction.date)}</td>\n          <td>\n            {merchantFormatter(merchant.name)}\n            {merchant.name}\n          </td>\n          <td>\n            {teamMemberFormatter(transaction.team_member)}\n            {transaction.team_member}\n          </td>\n          <td>{category.name}</td>\n          <td>{transaction.budget}</td>\n          <td style={centredTD()}>\n            {transaction.receipt ? (\n              <i className=\"fas fa-receipt orange\" />\n            ) : (\n              <i className=\"fas fa-receipt blue\" />\n            )}\n          </td>\n          <td style={centredTD()}>\n            <input\n              style={{\n                cursor: \"pointer\"\n              }}\n              onChange={() => this.handleCheck(transaction)}\n              checked={transaction.billable ? true : false}\n              type=\"checkbox\"\n              value={transaction.billable}\n            />\n          </td>\n          <td>{currencyFormatter(transaction.gst)}</td>\n          <td>{currencyFormatter(transaction.amount)}</td>\n        </tr>\n      );\n    });\n\n    return (\n      <>\n        <Search searchTerm={searchTerm} />\n        <div className=\"Table\">\n          <table>\n            <thead>\n              <tr>\n                <th>\n                  <input type=\"checkbox\" className=\"columnBox\" />\n                </th>\n                <th>Status</th>\n                <th>Date</th>\n                <th>Merchant</th>\n                <th>Team Member</th>\n                <th>Category</th>\n                <th>Budget</th>\n                <th>Receipt</th>\n                <th>Billable</th>\n                <th>GST</th>\n                <th>Amount</th>\n              </tr>\n            </thead>\n            <tbody>{transactionRows}</tbody>\n          </table>\n        </div>\n        <Pagination\n          itemsCount={allTransactions.length}\n          pageSize={pageSize}\n          currentPage={currentPage}\n          onPageChange={this.handlePageChange}\n        />\n      </>\n    );\n  }\n}\n\nexport default Table;\n","import _ from 'lodash';\n\nexport function paginate(items, pageNumber, pageSize) {\n  const startIndex = (pageNumber - 1) * pageSize;\n  return _(items).slice(startIndex).take(pageSize).value()\n}","import React from \"react\";\nimport \"./App.css\";\nimport Table from \"./components/Table\";\nimport categories from \"./data/categories.json\";\nimport merchants from \"./data/merchants.json\";\nimport transactions from \"./data/transactions.json\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Table\n        categories={categories}\n        merchants={merchants}\n        transactions={transactions}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}